// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/buyers": {
            "get": {
                "description": "Get all buyers.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer"
                ],
                "summary": "Obtain list of buyers.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a buyer indicating its parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer"
                ],
                "summary": "Create a buyer in the list of them",
                "parameters": [
                    {
                        "description": "Create Buyer",
                        "name": "buyer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.requestBuyer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/buyers/reportPurchaseOrders": {
            "get": {
                "description": "Get purchase orders by id or get all non indicating an id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer"
                ],
                "summary": "Get Purchase Orders by id or Get All",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Purchase Order Id",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/buyers/{id}": {
            "get": {
                "description": "Get buyer indicating its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer"
                ],
                "summary": "Get buyer by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete buyer modifying indicating its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer"
                ],
                "summary": "Delete buyer by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update buyer modifying only name and lastname parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer"
                ],
                "summary": "Update by id",
                "parameters": [
                    {
                        "description": "Buyer to uptdate",
                        "name": "buyer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.requestToUpdate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/carries": {
            "post": {
                "description": "create Carries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carries"
                ],
                "summary": "Create Carry",
                "parameters": [
                    {
                        "description": "Carry to store",
                        "name": "carry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.postRequestCarry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "get all employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "List employees",
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Create employees",
                "parameters": [
                    {
                        "description": "Employees to store",
                        "name": "Employees",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.postEmployee"
                        }
                    }
                ],
                "responses": {
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "description": "get employee by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "List employee by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "employees id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete employees by ID",
                "tags": [
                    "Employees"
                ],
                "summary": "Delete employee by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "employees id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Modify employees by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Modify employees",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "employees id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "employees to update",
                        "name": "employees",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.patchEmployee"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/inboundOrders": {
            "post": {
                "description": "Create inboundOrdes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InboundOrders"
                ],
                "summary": "Create inboundOrder",
                "parameters": [
                    {
                        "description": "InboundOrders to store",
                        "name": "InboundOrders",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.postInboundOrder"
                        }
                    }
                ],
                "responses": {
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/localities": {
            "post": {
                "description": "Create Locality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "Create Locality",
                "parameters": [
                    {
                        "description": "Locality to store",
                        "name": "Locality",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RequestLocalityPost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/localities/reportCarries": {
            "get": {
                "description": "Get Report of Carries by Locality",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "Get Report of Carries by Locality",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "locality id",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/localities/reportSellers": {
            "get": {
                "description": "Get Report of Sellers by Locality",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "Get Report of Sellers by Locality",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "locality id",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/productBatches/": {
            "post": {
                "description": "create a new product batch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductBatch"
                ],
                "summary": "Create product batch",
                "parameters": [
                    {
                        "description": "New Batch",
                        "name": "Batch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.requestBatches"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Get all products from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "List of all products from database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a product for POST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create a new Product with Service",
                "parameters": [
                    {
                        "description": "Create a product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.postReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Get product information using ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get a product with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a product from database",
                "tags": [
                    "Products"
                ],
                "summary": "Delete a Product with Service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a product with the requirements required.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update a Product with Service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create a product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.patchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/purchaseOrders": {
            "post": {
                "description": "Create a purchase order indicating its parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Create a purchase order in the list of them",
                "parameters": [
                    {
                        "description": "Create a Purchase Order",
                        "name": "buyer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.requestPurchaseOrders"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/sections": {
            "get": {
                "description": "get all registered sections",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "List sections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/sections/": {
            "post": {
                "description": "create a new section",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Create section",
                "parameters": [
                    {
                        "description": "New section",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/sections/reportProducts": {
            "get": {
                "description": "Get all products Reports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Get Product Reports",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/sections/{id}": {
            "get": {
                "description": "search a section given a valid id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Get section",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a section given a valid id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Delete section",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "search a section given a valid id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Update Section",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New data for section",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/sellers": {
            "get": {
                "description": "get all Sellers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Get all Sellers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create Sellers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Create Sellers",
                "parameters": [
                    {
                        "description": "Sellers to store",
                        "name": "Sellers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.postSeller"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/sellers/{id}": {
            "get": {
                "description": "get sellers by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Get sellers by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sellers id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete Seller by id",
                "tags": [
                    "Sellers"
                ],
                "summary": "Delete Seller by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Seller id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "update Sellers by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Update Sellers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sellers id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "sellers to update",
                        "name": "sellers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.patchSeller"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/warehouses": {
            "get": {
                "description": "get all Warehouses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get all Warehouses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create Warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Create Warehouses",
                "parameters": [
                    {
                        "description": "Warehouse to store",
                        "name": "warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.postRequestWH"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/warehouses/{id}": {
            "get": {
                "description": "get warehouse by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get Warehouse by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete warehouse by id",
                "tags": [
                    "Warehouses"
                ],
                "summary": "Delete Warehouse by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "update warehouses by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update Warehouses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Warehouse to update",
                        "name": "warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.patchRequestWH"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.RequestLocalityPost": {
            "type": "object",
            "required": [
                "country_name",
                "id",
                "locality_name",
                "province_name"
            ],
            "properties": {
                "country_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locality_name": {
                    "type": "string"
                },
                "province_name": {
                    "type": "string"
                }
            }
        },
        "handler.patchEmployee": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "handler.patchReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expiration_rate": {
                    "type": "integer"
                },
                "freezing_rate": {
                    "type": "integer"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "netweight": {
                    "type": "number"
                },
                "product_code": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "handler.patchRequestWH": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                },
                "warehouse_code": {
                    "type": "string"
                }
            }
        },
        "handler.patchSeller": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "handler.postEmployee": {
            "type": "object",
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "handler.postInboundOrder": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "integer"
                },
                "order_date": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "product_batch_id": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "handler.postReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expiration_rate": {
                    "type": "integer"
                },
                "freezing_rate": {
                    "type": "integer"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "netweight": {
                    "type": "number"
                },
                "product_code": {
                    "type": "string"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "recommended_freezing_temperature": {
                    "type": "number"
                },
                "seller_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "handler.postRequestCarry": {
            "type": "object",
            "required": [
                "cid",
                "locality_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "locality_id": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "handler.postRequestWH": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                },
                "warehouse_code": {
                    "type": "string"
                }
            }
        },
        "handler.postSeller": {
            "type": "object",
            "required": [
                "address",
                "cid",
                "company_name",
                "telephone"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "handler.request": {
            "type": "object",
            "properties": {
                "current_capacity": {
                    "type": "integer"
                },
                "current_temperature": {
                    "type": "integer"
                },
                "maximum_capacity": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "section_number": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "handler.requestBatches": {
            "type": "object",
            "properties": {
                "batchNumber": {
                    "type": "integer"
                },
                "currentQuantity": {
                    "type": "integer"
                },
                "currentTemperature": {
                    "type": "integer"
                },
                "dueDate": {
                    "type": "string"
                },
                "initialQuantity": {
                    "type": "integer"
                },
                "manufacturingDate": {
                    "type": "string"
                },
                "manufacturingHour": {
                    "type": "string"
                },
                "minumumTemperature": {
                    "type": "integer"
                },
                "productId": {
                    "type": "integer"
                },
                "sectionId": {
                    "type": "integer"
                }
            }
        },
        "handler.requestBuyer": {
            "type": "object",
            "required": [
                "card_number_id",
                "first_name",
                "last_name"
            ],
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "handler.requestPurchaseOrders": {
            "type": "object",
            "required": [
                "buyer_id",
                "order_date",
                "order_number",
                "order_status_id",
                "product_record_id",
                "tracking_code"
            ],
            "properties": {
                "buyer_id": {
                    "type": "integer"
                },
                "order_date": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "order_status_id": {
                    "type": "integer"
                },
                "product_record_id": {
                    "type": "integer"
                },
                "tracking_code": {
                    "type": "string"
                }
            }
        },
        "handler.requestToUpdate": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "web.errorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "web.response": {
            "type": "object",
            "properties": {
                "data": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	// LeftDelim:        "{{",
	// RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
